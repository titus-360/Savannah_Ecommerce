# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        # Install tools for linting, formatting, coverage, security, and static analysis
        pip install flake8 black coverage pip-audit bandit

    - name: Run Migrations
      run: |
        export DJANGO_SETTINGS_MODULE=savannah_ecommerce.ci_settings
        python manage.py migrate
      env:
        # We are now using ci_settings.py which hardcodes SQLite
        # DB_ENGINE: django.db.backends.sqlite3
        # DB_NAME: db.sqlite3
        # DB_USER: ''
        # DB_PASSWORD: ''
        # DB_HOST: ''
        # DB_PORT: ''
        DEBUG: False # Ensure debug is False for CI

    - name: Run Tests
      run: |
        export DJANGO_SETTINGS_MODULE=savannah_ecommerce.ci_settings
        coverage run --source='.' manage.py test
      env:
        # We are now using ci_settings.py which hardcodes SQLite
        # DB_ENGINE: django.db.backends.sqlite3
        # DB_NAME: db.sqlite3
        # DB_USER: ''
        # DB_PASSWORD: ''
        # DB_HOST: ''
        # DB_PORT: ''
        DEBUG: False # Ensure debug is False for CI

    - name: Generate Coverage Report
      run: |
        coverage report -m

    - name: Run Flake8 Linting
      run: flake8 .

    - name: Run Black Formatter Check
      run: black --check .

    - name: Run Pip-Audit Security Scan
      run: pip-audit

    - name: Run Bandit Static Analysis
      run: bandit -r . 
